# Generated by Django 3.1.7 on 2021-03-13 17:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('map', '0003_auto_20210313_1659'),
    ]

    operations = [
        migrations.AlterField(
            model_name='event',
            name='edit_users',
            field=models.ManyToManyField(blank=True, related_name='events_editor', to=settings.AUTH_USER_MODEL, verbose_name='edit users'),
        ),
        migrations.AlterField(
            model_name='event',
            name='owner',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='events_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='event',
            name='share_users',
            field=models.ManyToManyField(blank=True, related_name='events_shared', to=settings.AUTH_USER_MODEL, verbose_name='share users'),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('share_status', models.SmallIntegerField(choices=[(1, 'everyone can see'), (2, 'anyone with link'), (3, 'only specific users'), (9, 'blocked')], default=1, verbose_name='share status')),
                ('edit_status', models.SmallIntegerField(choices=[(1, 'Everyone can edit'), (2, 'Only editors can edit'), (3, 'Only owner can edit')], default=3, verbose_name='edit status')),
                ('edit_users', models.ManyToManyField(blank=True, related_name='places_editor', to=settings.AUTH_USER_MODEL, verbose_name='edit users')),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='places_owner', to=settings.AUTH_USER_MODEL)),
                ('share_users', models.ManyToManyField(blank=True, related_name='places_shared', to=settings.AUTH_USER_MODEL, verbose_name='share users')),
            ],
        ),
    ]
